name: Build Hadoop Native Binaries for Windows

on:
  workflow_dispatch:
    inputs:
      hadoop_version:
        description: 'Hadoop version (e.g. 3.4.1)'
        required: true
        default: '3.4.1'

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Set environment variables
      - name: Set variables
        run: |
          echo "RELEASE_TAG=rel/release-${{ github.event.inputs.hadoop_version }}" >> $env:GITHUB_ENV
          echo "DIST_VERSION=hadoop-${{ github.event.inputs.hadoop_version }}" >> $env:GITHUB_ENV
      
      - name: Install Git (for Bash)
        run: choco install git -y

      # Enable long paths in Git
      - name: Enable long paths
        run: git config --system core.longpaths true

      # Setup Java (depends on version of Hadoop)
      - name: Set up Java 8 (Temurin)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      # Setup Maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.9.6

      # Setup Visual Studio and MSVC
      - name: Set up MSVC build tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          vs-version: '2019'

      - name: Set up Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.3.1

      # Install CMake
      - name: Install CMake
        uses: lukka/get-cmake@v3.27.1

      # Install Protocol Buffers (protoc)
      - name: Install Protocol Buffers
        run: |
          choco install protoc -y
          echo "C:\Program Files\protoc\bin" >> $GITHUB_PATH

      # Install Python
      - name: Install Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ninja
        run: choco install ninja -y

      - name: Build zlib from source
        run: |
          git clone https://github.com/madler/zlib.git
          cd zlib
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=C:/zlib
          cmake --build . --config Release
          echo "C:/zlib" >> $GITHUB_PATH
      
      - name: Build Snappy from source
        run: |
          git clone https://github.com/google/snappy.git
          cd snappy
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=C:/snappy
          cmake --build . --config Release
          echo "C:/snappy" >> $GITHUB_PATH


      - name: Debug PATH and Java version
        shell: bash
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          mvn -v
          where bash
          where protoc || echo "protoc not found"

      # Clone specific Hadoop version
      - name: Checkout Hadoop
        uses: actions/checkout@v3
        with:
          repository: apache/hadoop
          ref: ${{ env.RELEASE_TAG }}
          path: hadoop

      # Build Hadoop native binaries
      - name: Build Hadoop native binaries
        shell: cmd
        run: |
          cd hadoop
          mvn clean install -Pdist,native -DskipTests -Dtar -e -X

      # List the final artifacts
      - name: List built binaries
        shell: bash
        run: |
          dir hadoop\hadoop-dist\target\${{ env.DIST_VERSION }}\bin
          dir hadoop\hadoop-dist\target\${{ env.DIST_VERSION }}\lib
          dir hadoop\hadoop-dist\target\${{ env.DIST_VERSION }}\lib\native

      # Upload everything from dist folder
      - name: Upload all native artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DIST_VERSION }}-native-windows
          path: |
            hadoop/hadoop-dist/target/${{ env.DIST_VERSION }}/bin/**
            hadoop/hadoop-dist/target/${{ env.DIST_VERSION }}/lib/**
            hadoop/hadoop-dist/target/${{ env.DIST_VERSION }}/lib/native/**
