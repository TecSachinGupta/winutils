name: Build Hadoop Native Binaries for Windows

on:
  workflow_dispatch:
    inputs:
      hadoop_version:
        description: 'Comma-separated list of Hadoop versions (e.g., 3.3.6,3.4.1)'
        required: true
        default: '3.4.1'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set matrix from input
        id: set-matrix
        run: |
          versions="${{ github.event.inputs.hadoop_version }}"
          clean_versions=$(echo "$versions" | jq -c -R 'split(",") | map(gsub("^\\s+|\\s+$"; ""))')
          echo "Parsed versions: $clean_versions"
          echo "matrix={\"version\":$clean_versions}" >> $GITHUB_OUTPUT
        shell: bash

  build:
    needs: prepare
    runs-on: windows-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - name: Echo Hadoop version
        run: echo "Building For Hadoop ${{ matrix.version }}"

      - name: Set environment variables
        run: |
          echo "RELEASE_TAG=rel/release-${{ matrix.version }}" >> $env:GITHUB_ENV
          echo "DIST_VERSION=hadoop-${{ matrix.version }}" >> $env:GITHUB_ENV

      - name: Set up Java 11 (Temurin)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Install Native Dependencies via Chocolatey
        run: |
          choco install -y maven git winflexbison3 cmake protoc ninja
          git config --system core.longpaths true
        shell: powershell

      - name: Update PATH for tools
        run: |
          echo "$env:ChocolateyInstall\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "C:\Program Files\protoc\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "$env:JAVA_HOME\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
        shell: powershell

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-cache-${{ matrix.version }}
          restore-keys: |
            maven-cache-

      - name: Debug Environment
        shell: bash
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          mvn -v
          where bash
          where cl || echo "cl.exe not found"
          where cmake || echo "cmake not found"
          where win_flex || echo "win_flex not found"
          where win_bison || echo "win_bison not found"

      - name: Checkout Hadoop Source Code
        uses: actions/checkout@v3
        with:
          repository: apache/hadoop
          ref: ${{ env.RELEASE_TAG }}
          path: hadoop

      - name: Build Hadoop native binaries
        shell: pwsh
        run: |
          $vsPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          if (-Not (Test-Path $vsPath)) {
            $vsPath = "C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Auxiliary\Build\vcvars64.bat"
          }
          if (-Not (Test-Path $vsPath)) {
            $vsPath = "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
          }
          if (-Not (Test-Path $vsPath)) {
            Write-Error "Could not find vcvars64.bat"
            exit 1
          }

          # Initialize build env, then run Maven native build in bash
          cmd /c "`"$vsPath`" && bash -c 'cd hadoop && mvn clean install -Pdist,native -DskipTests -Dtar -e -X'"

      - name: Dump logs on failure
        if: failure()
        shell: bash
        run: |
          echo "Dumping log files..."
          find hadoop -type f -name "*.log" | while read log; do
            echo "--- $log ---"
            cat "$log"
          done
